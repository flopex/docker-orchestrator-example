---
version: '2.1'

services:
  db1:
    hostname: db1
    build: https://github.com/flopex/docker-mysql-replication.git#:5.7
    healthcheck:
      test: "mysqladmin ping -ppassword"
    environment: &db_default_env
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
      MYSQL_DATABASE: test_db
      REPLICATION_USER: repl_user
      REPLICATION_PASSWORD: repl_password
    networks:
      main:
        aliases:
          - master
          - db1

  db2:
    hostname: db2
    build: https://github.com/flopex/docker-mysql-replication.git#:5.7
    environment: &db_replica_env
      <<: *db_default_env
      MASTER_HOST: db1
      MASTER_PORT: 3306
      SERVER_ID: 2
    depends_on: &db_replica_depends_on
      db1:
        condition: service_healthy
    networks:
      main:
        aliases:
          - db2

  db3:
    hostname: db3
    build:
      context: https://github.com/flopex/docker-mysql-replication.git#:5.7
    environment:
      <<: *db_replica_env
      SERVER_ID: 3
    depends_on: *db_replica_depends_on
    networks:
      main:
        aliases:
          - db3

  db4:
    hostname: db4
    build:
      context: https://github.com/flopex/docker-mysql-replication.git#:5.7
    environment:
      <<: *db_replica_env
      SERVER_ID: 4
    depends_on: *db_replica_depends_on
    networks:
      main:
        aliases:
          - db4

  orchestrator1:
    hostname: orchestrator1
    build: .
    volumes: &orc_vols
      - ./docker/entrypoint.sh:/entrypoint.sh:ro
    ports:
      - 3331:3000
    environment: &orc_env
      ORC_TOPOLOGY_USER: root
      ORC_TOPOLOGY_PASSWORD: password
    depends_on: &orchestrator_depends_on
      - zoo1
      - zoo2
      - zoo3
    networks:
      main:
        aliases:
          - orchestrator1

  orchestrator2:
    hostname: orchestrator2
    build: .
    volumes: *orc_vols
    ports:
      - 3332:3000
    environment: *orc_env
    depends_on: *orchestrator_depends_on
    networks:
      main:
        aliases:
          - orchestrator2

  orchestrator3:
    hostname: orchestrator3
    build: .
    volumes: *orc_vols
    ports:
      - 3333:3000
    environment: *orc_env
    depends_on: *orchestrator_depends_on
    networks:
      main:
        aliases:
          - orchestrator3

  haproxy:
    image: haproxy:1.8
    depends_on:
      - orchestrator1
      - orchestrator2
      - orchestrator3
    ports:
      - 8080:80
    volumes:
      - ./docker/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      main:
        aliases:
          - haproxy

  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      main:
        aliases:
          - zoo1

  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      main:
        aliases:
          - zoo2

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      main:
        aliases:
          - zoo3
networks:
  main:
